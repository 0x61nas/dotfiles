# INCLUDES
# --------
# Local/Private config goes in the include
[include]
  path = ~/.gitconfig.local
# URL ALIASES
# -----------
# Alias for my mian account
[url "git@github.com:0x61nas/"]
  insteadOf = me:
[url "git@github.com:"]
	insteadOf = gh:
[user]
	name = Anas Elgarhy
	email = anas.elgarhy.dev@gmail.com
	signingkey = 0E4F7AB7210FA2856F1AAD7E38442349DD00D8C6
[core]
	editor = helix
  pager = delta
  autocrlf = input
  safecrlf = true
[ui "color"]
	ui = always
[color]
	ui = true
[init]
  defaultBranch = aurora
[help]
  autocorrect = 1
[github]
  user = 0x61nas
[interactive]
  diffFilter = delta --color-only
[delta]
  navigate = true    # use n and N to move between diff sections
  light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
[merge]
  conflictstyle = diff3
[diff]
    colorMoved = default
[credential]
	helper = store
[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
[rebase]
	autoStash = true
[alias]
  # allows you to switch branches quickly. For example, `git co master` instead of `git checkout master`
  co = checkout
  # simplifying the commit process. For example, `git ci -m "Commit message"` instead of `git commit -m "Commit message"`
  ci = commit
  # helping you create branches faster. For example, `git br feature` instead of `git branch feature`.
  br = branch
  st = status
  df = diff
	lg = log --pretty=\"%C(magenta)%h%Creset %C(yellow)%d%Creset%s %C(bold cyan)(%ar)%Creset\"
  lgg = lg --abbrev-commit --all --graph
  unstage = reset HEAD
  last = log -1 HEAD
  undo = reset HEAD~
  pushf = push --force
  squash = !git rebase -i HEAD~$1
  amend = commit --amend -S
  aliases = config --get-regexp alias
  brl = !git for-each-ref --format='%(refname:short) %(objectname:short)' refs/heads/
  uncommit = reset HEAD^
  hist = log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
  ff = merge --ff-only
  shelve = !git stash && git checkout
  unshelve = stash apply && git stash drop
  sync = !git fetch && git rebase origin/$(git symbolic-ref --short HEAD)
  upstream = branch --set-upstream-to
  ignore = !echo "$1" >> .gitignore
  rebase = rebase -S
  addp = add --patch

